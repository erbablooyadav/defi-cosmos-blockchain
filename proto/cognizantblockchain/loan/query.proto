syntax = "proto3";

package cognizantblockchain.loan;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cognizantblockchain/loan/params.proto";
import "cognizantblockchain/loan/loan.proto";

option go_package = "cognizant-blockchain/x/loan/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/cognizant-blockchain/loan/params";
  
  }
  
  // Queries a list of Loan items.
  rpc Loan    (QueryGetLoanRequest) returns (QueryGetLoanResponse) {
    option (google.api.http).get = "/cognizant-blockchain/loan/loan/{id}";
  
  }
  rpc LoanAll (QueryAllLoanRequest) returns (QueryAllLoanResponse) {
    option (google.api.http).get = "/cognizant-blockchain/loan/loan";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetLoanRequest {
  uint64 id = 1;
}

message QueryGetLoanResponse {
  Loan Loan = 1 [(gogoproto.nullable) = false];
}

message QueryAllLoanRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllLoanResponse {
  repeated Loan                                   Loan       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

